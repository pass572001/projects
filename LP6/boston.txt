
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
import math 


import tensorflow as tf
from tensorflow import keras
from keras import metrics
from keras.models import Sequential
from keras.layers import Dropout,Dense 


housing = pd.read_csv("bh.csv")
housing.head(10) 


housing.info()


housing.corr() 


independent = housing.drop('price', axis=1)
independent.head()


dependent = housing['price'].values
print (dependent)


X_train, X_test, y_train, y_test = train_test_split(independent, dependent, test_size=0.2, random_state=42)


from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
scaler. fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test) 


model = Sequential()
model.add(Dense(128, input_dim=13, activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.5))
# Output Layer
model.add(Dense(1, activation='linear'))



model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mae'])
model.summary()


history = model.fit(X_train, y_train, epochs=100, validation_data=(X_test, y_test))


# Predict on test data
predictions = model.predict(X_test)
print("Predicted values are:", predictions[:5])
print("Real values are:", y_test[:5])


r2_score(y_test, predictions) 




